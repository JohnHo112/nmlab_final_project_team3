name: 'bump-versions'
description: 'Bump project versions for the release target'
inputs:
  release-target:
    description: "target of the release (rust|wasm)"
    required: true
  version:
    description: "version to set (e.g. `1.2.3` or `1.2.3-dev.1`)"
    required: true


runs:
  using: "composite"
  steps:
    - name: Setup Rust
      uses: './.github/actions/rust/rust-setup'
      with:
        os: ${{ runner.os }}
        job: ${{ github.job }}

    - name: Install cargo-workspaces
      shell: bash
      run: cargo install --version ^0.2 cargo-workspaces

    - name: Install cargo-edit # to use cargo add and set-version
      shell: bash
      run: cargo install -f --no-default-features --features "set-version" --version ^0.8 cargo-edit

    - name: Bump Rust crate versions
      shell: bash
      if: ${{inputs.release-target == 'rust'}}
      run: |
        cargo workspaces version --force "*" --no-git-commit --exact custom ${{ inputs.version }} -y

    # cargo workspaces ignores examples/ but cargo release still tries to version it during publishing.
    - name: Bump Rust examples version
      shell: bash
      if: ${{inputs.release-target == 'rust'}}
      working-directory: examples
      run: |
        cargo set-version ${{ inputs.version }}

    - name: Bump Wasm bindings crate version
      shell: bash
      if: ${{inputs.release-target == 'wasm'}}
      working-directory: bindings/wasm
      run: |
        cargo workspaces version --force "*" --no-git-commit --exact custom ${{ inputs.version }} -y -a

    - name: Replace identity_iota version in Wasm bindings
      shell: bash
      if: ${{inputs.release-target == 'rust'}}
      working-directory: bindings/wasm
      run: |
        cargo add identity_iota --path=../../identity_iota

    - name: Set up Node.js
      uses: actions/setup-node@v2
      if: ${{inputs.release-target == 'wasm'}}
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Bump Wasm npm package version
      shell: bash
      if: ${{inputs.release-target == 'wasm'}}
      working-directory: bindings/wasm
      run: |
        npm version ${{ inputs.version }}
